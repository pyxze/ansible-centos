---
- hosts: 127.0.0.1
  connection: local
  vars:
    user: root
    root_db_password: "{{ lookup('password', 'credentials/mysqlpassword length=15') }}"
  tasks:
  - name: Grab remi repo -- for php 5.4 and mysql 5.5
    action: command wget http://rpms.famillecollet.com/enterprise/remi-release-6.rpm -P /tmp
  - name: Install libselinux-python for ansible
    action: yum pkg=libselinux-python state=present
  - name: Install remi repos
    action: command rpm -Uvh /tmp/remi-release-6*.rpm --nopgp
    ignore_errors: True
  - name: Copy over enabled remi repo file
    action: template src=templates/remi.repo dest=/etc/yum.repos.d/remi.repo
  - name: install packages
    action: yum pkg={{ item }} state=present disable_gpg_check=yes
    with_items:
      - httpd
      - mysql-server
      - php
      - php-mysql
      - php-gd
      - php-mbstring
      - php-mcrypt
      - php-pdo
      - MySQL-python
      - vim
      - emacs
      - ack
  - name: ensure apache is running
    action: service name=httpd state=started
  - name: Ensure Apache will start on reboot
    action: command chkconfig httpd on
  - name: ensure mysql-server is running
    action: service name=mysqld state=started
  - name: Ensure MySQL will start on reboot
    action: command chkconfig mysqld on
  # The following tasks go through the steps of securing the initial mysql
  # installation per https://dev.mysql.com/doc/refman/5.5/en/default-privileges.html
  # using the tasks from https://coderwall.com/p/yez9yw
  - name: update mysql root password for all root accounts
    mysql_user: name=root host={{ item }} password={{ root_db_password }}
    with_items:
      - "{{ ansible_hostname }}"
      - 127.0.0.1
      - ::1
      - localhost
  - name: copy .my.cnf file with root password credentials
    template: src=templates/my.cnf-root dest=/root/.my.cnf owner=root mode=0600
  - name: copy my.cnf file with utf8 and innodb defaults
    template: src=templates/my.cnf-etc dest=/etc/my.cnf owner=root mode=0600
  - name: ensure anonymous users are not in the database
    mysql_user: name='' host={{ item }} state=absent
    with_items:
      - localhost
      - "{{ ansible_hostname }}"
  - name: remove the test database
    mysql_db: name=test state=absent
